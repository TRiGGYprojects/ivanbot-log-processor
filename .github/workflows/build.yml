# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io

  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
jobs:
  gradle:
    name: Gradle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew bootJar test
      - uses: actions/upload-artifact@v2
        with:
          name: ivanbot-log-processor.jar
          path: build/libs

      - name: Delete old tag
        run: |
          git tag -d latest
          git push origin :refs/tags/latest || true

      - name: Create or Update tag 'latest'
        run: |
          git tag -fa latest -m "Update latest"
          git push origin latest
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Release latest
          draft: false
          prerelease: false
      - name: Upload Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/*.jar
          asset_name: ivanbot-log-processor.jar
          asset_content_type: application/java-archive
  cleanup:
    runs-on: ubuntu-latest
    needs: Gradle
    steps:
      - name: Remove package versions
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '2 days'
          skip-recent: 2

